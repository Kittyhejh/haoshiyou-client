# A fastlane file, see https://fastlane.tools/ for reference

# Update fastlane automatically if a new version is available:
# update_fastlane

fastlane_version "2.28.8"

ios_project_path = "platforms/ios/haoshiyou.xcodeproj"
android_release_path = "releases/haoshiyou-android-release.apk"

before_all do
  ENV["SLACK_URL"] =
      "https://hooks.slack.com/services/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"
end

private_lane :prepare do
  if ENV["IONIC_ENV"] == "prod"
    sh("echo 'Incrementing Version for PROD release.'")
    sh("node scripts/increment_build_number.js")
  end
  sh("cd .. && ./travis/setup-env.sh")
end

# ===== iOS Private Lanes =====
desc "Do a new iOS build using ionic."
private_lane :ionic_ios_build do
  sh("ionic cordova build ios --release")
end

desc "Do a new iOS deploy using sigh and gym"
private_lane :ios_deploy do
  cert
  sigh
  gym(
      scheme: "haoshiyou",
      project: ios_project_path)
end

desc "Do a new iOS upload to iTunes Connect using deliver."
private_lane :ios_upload do
  deliver(force: true)
  slack(message: "Successfully deployed to iTunes Connect at Version " +
      "#{get_version_number(xcodeproj:ios_project_path)}.")
end

desc "Do a new Android build"
private_lane :ionic_android_build do
  sh("ionic cordova build android --release")
end

# ===== Android Private Lanes =====
desc "Do a new Android deploy using jarsigner and zipaliagn."
private_lane :android_deploy do |options|
  # require storepass to be specified
  sh("cd .. && jarsigner -verbose " +
         "-storepass #{options[:storepass]} " +
         "-sigalg SHA1withRSA -digestalg SHA1 " +
         "-keystore fastlane/release-cred/haoshiyou-android.keystore " +
         "platforms/android/build/outputs/apk/android-release-unsigned.apk alias_name")

  sh("cd .. && ${HOME}/Library/Android/sdk/build-tools/23.0.3/zipalign -f " +
         "-v 4 platforms/android/build/outputs/apk/android-release-unsigned.apk " +
         android_release_path)
end

desc "Do a new Android upload to Google Play Console using supply."
private_lane :android_upload do
  supply(
      track: "alpha",
      apk: android_release_path,
      json_key: "fastlane/release-cred/haoshiyou-play-release-manager-credentials.json",
      package_name: "org.haoshiyou.app"
  )
  slack(message: "Successfully deployed to Google Play.") # TODO(xinbenlv): add version
end

desc "Do a new Web build using ionic."
private_lane :ionic_web_build do
  sh("ionic cordova build --release")
end

desc "Do a new upload to haoshiyou.org Web."
lane :web_upload do
  # First time should do this

  if ENV["IONIC_ENV"] == "prod"
    sh("echo 'Assumming you are checking out from dev branch'")
    sh("git checkout -- ../config.xml")
    sh("git checkout release-web-prod")
    sh("git merge dev")
    sh("ionic cordova build ios --release")
    sh("git add ../../haoshiyou/www/ -f")
    sh("git commit -m 'web-release';true")

    sh("cd .. && cd .. && git push publish-prod `git subtree split --prefix haoshiyou/www/ release-web-prod`:gh-pages --force")
    sh("git checkout dev")
    slack(message: "Successfully deployed to www.haoshiyou.org Web.") # TODO(xinbenlv): add version
  else

    # sh("git remote add publish-dev git@github.com:xinbenlv/dev-haoshiyou-org.git")
    # sh("git subtree push --prefix haoshiyou/www/ publish-dev release-web-dev:gh-pages")
    sh("echo 'Assumming you are checking out from dev branch'")
    sh("git checkout -- ../config.xml")
    sh("git checkout release-web-dev")
    sh("git merge dev")
    sh("ionic cordova build ios --release")
    sh("git add ../../haoshiyou/www/ -f")
    sh("git commit -m 'web-release';true")

    sh("cd .. && cd .. && git push publish-dev `git subtree split --prefix haoshiyou/www/ release-web-dev`:gh-pages --force")
    sh("git checkout dev")
    slack(message: "Successfully deployed to dev.haoshiyou.org Web.") # TODO(xinbenlv): add version
  end
end

desc "Deploy a new version to the App Store/"
private_lane :ios_publish do
  ionic_ios_build
  ios_deploy
  ios_upload
end

desc "Deploy a new version to the Google Play Store."
private_lane :android_publish do |options|
  if options[:storepass].nil? || options[:storepass].empty?
    sh("echo 'please specify storepass:<android keystore password>'")
    exit
  else
    ionic_android_build
    android_deploy(options)
    android_upload
  end
end

platform :ios do
  desc "Deploy a new version to the App Store/"
  lane :publish do
    prepare
    ios_publish
  end
end

platform :android do
  prepare
  desc "Deploy a new version to the Google Play Store."
  lane :deploy do |options|
    prepare
    android_publish(options)
  end
end

desc "Deploy a new version to the web"
lane :web_deploy do
  prepare
  web_publish
end


desc "Publish a new version to the web"
lane :web_publish do
  ionic_web_build
  web_upload
end

desc "Deploy to all platforms."
lane :publish_all do |options|
  prepare
  android_publish(options)
  ios_publish
  web_publish
end

# TODO(zzn):
# - 1. add deployment for web
# - 2. merge web flow into deploy_all
# - 3. add other workflows: test, pilot, prod
# - 4. add support "dev" scheme
